import fetch from 'node-fetch'

let handler = async (m, { conn, text }) => {
  if (!text) return m.reply('‚ö†Ô∏è Por favor escribe el nombre de usuario de Instagram.\nEjemplo: .ig felipebaliski')

  try {
    // M√©todo que funciona sin APIs de pago
    let res = await fetch(`https://www.instagram.com/${text}/`, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'en-US,en;q=0.5',
        'Connection': 'keep-alive'
      }
    })

    if (!res.ok) {
      throw new Error(`HTTP ${res.status}: Usuario no encontrado o perfil no accesible`)
    }

    let html = await res.text()
    
    // Verificar si la respuesta es v√°lida
    if (!html || html.length < 100) {
      throw new Error('Respuesta vac√≠a o inv√°lida de Instagram')
    }

    // Buscar datos JSON en el HTML
    let dataMatch = html.match(/<script type="application\/ld\+json">({.*?"@type":"Person".*?})<\/script>/)
    
    if (dataMatch) {
      // M√©todo 1: JSON-LD data
      let jsonData = JSON.parse(dataMatch[1])
      let nombre = jsonData.name || 'Sin nombre'
      let bio = jsonData.description || 'Sin biograf√≠a'
      let fotoPerfil = jsonData.image || `https://www.instagram.com/${text}/profile.jpg`
      
      let message = `
üì∏ *Instagram:* https://instagram.com/${text}
üë§ *Nombre:* ${nombre}
üìù *Bio:* ${bio}
üîç *Usuario:* @${text}
      `.trim()

      await conn.sendMessage(m.chat, { 
        image: { url: fotoPerfil }, 
        caption: message 
      }, { quoted: m })
      return
    }

    // M√©todo 2: Extraer del meta tags
    let titleMatch = html.match(/<title>(.*?)<\/title>/)
    let descMatch = html.match(/<meta property="og:description" content="(.*?)"/)
    let imageMatch = html.match(/<meta property="og:image" content="(.*?)"/)
    
    if (titleMatch || descMatch) {
      let nombre = titleMatch ? titleMatch[1].replace(/\(@.*?\).*/, '').trim() : 'Sin nombre'
      let bio = descMatch ? descMatch[1] : 'Sin biograf√≠a'
      let fotoPerfil = imageMatch ? imageMatch[1] : `https://instagram.com/${text}`
      
      // Limpiar el nombre del t√≠tulo
      if (nombre.includes('Instagram')) {
        nombre = nombre.split('(')[0].trim()
      }
      
      let message = `
üì∏ *Instagram:* https://instagram.com/${text}
üë§ *Nombre:* ${nombre}
üìù *Bio:* ${bio}
üîç *Usuario:* @${text}
      `.trim()

      await conn.sendMessage(m.chat, { 
        image: { url: fotoPerfil }, 
        caption: message 
      }, { quoted: m })
      return
    }

    // Si no se pudo extraer informaci√≥n espec√≠fica
    let perfilUrl = `https://instagram.com/${text}`
    let message = `
üì∏ *Instagram:* ${perfilUrl}
üîç *Usuario:* @${text}
‚úÖ *Estado:* Perfil encontrado
‚ÑπÔ∏è *Nota:* No se pudieron extraer detalles adicionales (posible perfil privado)
    `.trim()

    await conn.sendMessage(m.chat, { 
      text: message
    }, { quoted: m })

  } catch (e) {
    console.error('Error detallado:', e.message)
    
    // Mensaje de error m√°s √∫til
    let errorMessage = `
‚ùå Error al obtener informaci√≥n de @${text}

üîç **Verifica que:**
‚Ä¢ El nombre de usuario sea correcto
‚Ä¢ El perfil sea p√∫blico
‚Ä¢ No tenga caracteres especiales

üîó **Enlace directo:** https://instagram.com/${text}
    `.trim()
    
    m.reply(errorMessage)
  }
}

handler.command = /^ig$/i
handler.register = true

export default handler
